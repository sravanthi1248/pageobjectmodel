<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-0A6J84B" failures="0" tests="1" name="Test" time="0.114" errors="0" timestamp="2023-08-21T10:02:02 IST">
  <testcase classname="base.BaseTest" name="@BeforeTest beforeTestMethod" time="0.017">
    <failure type="java.lang.UnsupportedClassVersionError" message="com/aventstack/extentreports/reporter/ExtentSparkReporter has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 53.0">
      <![CDATA[java.lang.UnsupportedClassVersionError: com/aventstack/extentreports/reporter/ExtentSparkReporter has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 53.0
at java.base/java.lang.ClassLoader.defineClass1(Native Method)
at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1007)
at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)
at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:801)
at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:699)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:622)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:580)
at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:185)
at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:496)
at base.BaseTest.beforeTestMethod(BaseTest.java:40)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTestMethod -->
  <testcase classname="base.BaseTest" name="@BeforeMethod setUp" time="-1.692592322111E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.BaseTest" name="@AfterMethod afterMethod" time="-1.692592322123E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.BaseTest" name="@AfterTest afterTest" time="-1.692592322132E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="qa.tests.loginTest" name="firstTest" time="0.0">
    <skipped/>
  </testcase> <!-- firstTest -->
</testsuite> <!-- Test -->
